{"version":3,"sources":["Infobox.js","util.js","MapView.js","Table.js","App.js","index.js"],"names":["Infobox","title","cases","isRed","active","total","props","Card","onClick","className","Typography","color","casesTypeColors","multiplier","option","fillColor","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataonMap","casesType","map","country","Circle","center","countryInfo","lat","long","pathOptions","fillOpacity","radius","Math","sqrt","Popup","style","backgroundImage","flag","numeral","format","MapView","countries","zoom","MapContainer","TileLayer","url","attribution","Table","App","useState","setCountries","setCountry","setCountryInfo","TableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","useEffect","fetch","then","response","json","name","value","iso2","getCountriesData","onCountryChange","event","countryCode","target","Select","variant","onChange","MenuItem","todayCases","Total","todayRecovered","todayDeaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e00502c.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Infobox.css\"\r\nimport {Card,Typography} from \"@material-ui/core\";\r\n\r\nfunction Infobox({title,cases,isRed,active,total,...props}) {\r\n    return (\r\n       <Card onClick={props.onClick} className={`infoBox ${active &&\"infoBox--selected\"} ${isRed && \"infoBox--red\"}`}\r\n       >\r\n       <Typography color=\"textSecondary\" className=\"infoBox_title\">{title}</Typography>\r\n       <h2 className={`infoBox_cases ${!isRed && \"infoBox_cases--green\"}`}>{cases}</h2>\r\n       <Typography color=\"textSecondary\" className=\"infoBox_total\">Total-{total}</Typography>\r\n\r\n       </Card>\r\n    )\r\n}\r\n\r\nexport default Infobox\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport numeral from \"numeral\";\r\nimport {Circle,Popup} from \"react-leaflet\";\r\n\r\n\r\nconst casesTypeColors={\r\n    cases: {\r\n        multiplier: 800,\r\n        option: { color:\"#cc1034\", fillColor: \"#cc1034\" },\r\n      },\r\n      recovered: {\r\n        multiplier: 1200,\r\n        option: { color:\"#7dd71d\", fillColor: \"#7dd71d\" },\r\n      },\r\n      deaths: {\r\n        multiplier: 2000,\r\n        option: { color:\"#ff6c47\", fillColor: \"#ff6c47\" }\r\n      },\r\n};\r\n\r\nexport const sortData=(data)=>{\r\n    const sortedData=[...data];\r\n    sortedData.sort((a,b)=>{\r\n        if(a.cases>b.cases)\r\n        {\r\n            return-1;\r\n        }\r\n        else{\r\n            return 1;\r\n        };\r\n    });\r\n    return sortedData;\r\n}\r\nexport const showDataonMap=(data,casesType=\"cases\")=>\r\ndata.map((country)=>(\r\n    <Circle center= {[country.countryInfo.lat,country.countryInfo.long]}\r\n    \r\n    pathOptions={casesTypeColors[casesType].option}\r\n    fillOpacity={0.4}\r\n    radius={\r\n        Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier\r\n    }\r\n     >\r\n<Popup>\r\n<div className=\"info-container\">\r\n    <div className=\"info-flag\"\r\n        style={{backgroundImage: `url(${country.countryInfo.flag})`}}\r\n\r\n        />\r\n       \r\n    \r\n    <div className=\"info-name\">{country.country}</div>\r\n    <div className=\"info-confirmed\">Cases:{numeral(country.cases).format(\"0,0\")}</div>\r\n    <div className=\"info-recovered\">Recovered:{numeral(country.recovered).format(\"0,0\")}</div>\r\n    <div className=\"info-deaths\">Deaths:{numeral(country.deaths).format(\"0,0\")}</div>\r\n</div>\r\n</Popup>\r\n    </Circle>\r\n    \r\n));\r\n","import React from 'react'\r\nimport { MapContainer ,TileLayer} from 'react-leaflet';\r\nimport \"./Map.css\";\r\nimport {showDataonMap} from \"./util.js\";\r\n\r\n\r\n\r\nfunction MapView({countries,casesType,center,zoom}) {\r\n    return (\r\n        <div className=\"map\">\r\n   <MapContainer center={center} zoom={zoom}>     \r\n<TileLayer  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'/>\r\n      {showDataonMap(countries,casesType)}\r\n       </MapContainer>\r\n           \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MapView;\r\n","import React from 'react'\r\nimport\"./Table.css\"\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({countries}) {\r\n    return (\r\n        <div className=\"table\">\r\n           { countries.map(({country,cases})=>\r\n             (  <tr>\r\n                <td>{country}</td>\r\n                <td><strong>{numeral(cases).format(\"0,0\")}</strong></td>\r\n            </tr>\r\n              ))\r\n            };\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Table\r\n\r\n","import React,{useState,useEffect} from 'react'\nimport \"./App.css\";\nimport{MenuItem,Select, Card} from \"@material-ui/core\";\nimport Infobox from \"./Infobox.js\";\nimport MapView from \"./MapView.js\";\nimport Table from \"./Table.js\";\nimport {sortData }from \"./util.js\";\nimport \"leaflet/dist/leaflet.css\";\n\n\nfunction App() {\n  const[countries,setCountries]= useState([])\n  const[country,setCountry]=useState(\"Worldwide\")\n  const[countryInfo,setCountryInfo]=useState({})\n  const[TableData,setTableData]=useState([]);\n  const[mapCenter,setMapCenter]=\n  useState({lat:34.80746,lng:-40.4796});\n  const[mapZoom,setMapZoom]=useState(3);\n  const[mapCountries,setMapCountries]=useState([]);\n  const[casesType,setCasesType]=useState(\"cases\");\n\n  useEffect(()=>{\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response=>response.json())\n    .then(data=>{\n      setCountryInfo(data);\n    })\n  },[]);\n  useEffect(()=>{\nconst getCountriesData=async()=>{\n  await fetch(\"https://disease.sh/v3/covid-19/countries\")\n  .then((response)=>response.json())\n  .then((data)=>{\n   const countries=data.map((country)=>({\n     name:country.country,\n     value:country.countryInfo.iso2,\n   }));\n    setMapCountries(data);\n   setCountries(countries);\n   const sortedData=sortData(data);\n\n   setTableData(sortedData);\n  });\n};\ngetCountriesData();\n  },[]);\n  const onCountryChange=async(event)=>{\n    const countryCode=event.target.value;\n    \n    const url=countryCode===\"Worldwide\"?\"https://disease.sh/v3/covid-19/all\":\n    `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n    .then((response)=>response.json())\n    .then((data)=>{\n      setCountry(countryCode);\n      setCountryInfo(data);\n\n      countryCode === \"Worldwide\" \n        ? setMapCenter([34.80746, -40.4796])\n        : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        countryCode === \"Worldwide\"\n        ? setMapZoom(3)\n        : setMapZoom(4);\n    })\n  }\n  \n  return (\n    <div className=\"app\">\n    <div className=\"app_left\">\n   <div className=\"app_header\">\n     <h1>COVID-19 TRACKER</h1>\n     <Select className=\"sel\" variant=\"outlined\" onChange={onCountryChange} value={country}>\n     <MenuItem value=\"Worldwide\">Worldwide</MenuItem>\n     {countries.map((country)=>\n     ( <MenuItem value= {country.value}>{country.name}</MenuItem>)\n     )\n     }\n      \n      \n     </Select>\n\n</div>\n<div className=\"app_stats\">\n  <Infobox\n  isRed /*variable*/\n  onClick={(event)=>setCasesType(\"cases\")}\n  active={casesType === \"cases\"}\n   className=\"cases_info\" title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases}Total/>\n  <Infobox\n   onClick={(event)=>setCasesType(\"recovered\")}\n   active={casesType === \"recovered\"}\n   className=\"recovered_info\" title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered}Total/>\n  <Infobox\n  isRed\n   onClick={(event)=>setCasesType(\"deaths\")}\n   active={casesType === \"deaths\"}\n   className=\"death_info\" title=\"Deaths\" cases={countryInfo.todayDeaths}  total={countryInfo.deaths}Total/>\n</div>\n<MapView\ncasesType={casesType}\ncountries={mapCountries}\n  center={mapCenter}\n  zoom={mapZoom}\n/>\n</div>\n<div className=\"app_right\">\n<Card>\n  <h3>Live cases by country</h3>\n  <Table countries={TableData}/>\n</Card>\n</div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}